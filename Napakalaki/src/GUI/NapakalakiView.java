/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import NapakalakiGame.CombatResult;
import NapakalakiGame.Monster;
import NapakalakiGame.Napakalaki;
import NapakalakiGame.Player;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author emilio
 */
public class NapakalakiView extends javax.swing.JFrame {

    private Napakalaki napakalakiModel;
    
    
    public NapakalakiView() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    
    public void setNapakalaki (Napakalaki model){
        napakalakiModel = model;
        this.playerView.setPlayer(napakalakiModel.getCurrentPlayer());
        this.playerView.setNapakalaki(napakalakiModel);
        this.monsterView.setMonster(napakalakiModel.getCurrentMonster());
        this.monsterView.setVisible(false);
        
        nextTurn.setEnabled(false);
        combat.setEnabled(false);
        repaint();
        revalidate();
        
      revalidate();
      }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerView = new GUI.PlayerView();
        monsterView = new GUI.MonsterView();
        showMonster = new javax.swing.JButton();
        combat = new javax.swing.JButton();
        nextTurn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Napakalaki Game");
        setMaximumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(playerView, new org.netbeans.lib.awtextra.AbsoluteConstraints(299, 74, -1, -1));

        monsterView.setMaximumSize(new java.awt.Dimension(226, 380));
        getContentPane().add(monsterView, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 74, -1, -1));

        showMonster.setText("Ver Monstruo");
        showMonster.setMaximumSize(new java.awt.Dimension(226, 44));
        showMonster.setMinimumSize(new java.awt.Dimension(226, 44));
        showMonster.setPreferredSize(new java.awt.Dimension(226, 44));
        showMonster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMonsterActionPerformed(evt);
            }
        });
        getContentPane().add(showMonster, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 24, -1, -1));

        combat.setText("¡LUCHAR!");
        combat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatActionPerformed(evt);
            }
        });
        getContentPane().add(combat, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 455, 226, 49));

        nextTurn.setText("Pasar Turno");
        nextTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTurnActionPerformed(evt);
            }
        });
        getContentPane().add(nextTurn, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 515, 226, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showMonsterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMonsterActionPerformed
        this.monsterView.setVisible(true);
        showMonster.setEnabled(false);
        playerView.setMakeVisibleB(false);
        playerView.setDiscardAllTreasuresB(false);
        playerView.setDiscardTreasureB(false);
        playerView.setStealB(false);
        combat.setEnabled(true);
        nextTurn.setEnabled(false);
          
    }//GEN-LAST:event_showMonsterActionPerformed

    private void nextTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTurnActionPerformed
      if(napakalakiModel.nextTurn()){
            playerView.setMakeVisibleB(true);
            playerView.setDiscardAllTreasuresB(true);
            playerView.setDiscardTreasureB(true);
            playerView.setStealB(false);

            combat.setEnabled(false);
            nextTurn.setEnabled(false);
            this.showMonster.setEnabled(true);
            
            monsterView.setMonster(napakalakiModel.getCurrentMonster());
            monsterView.setVisible(false);
            playerView.setPlayer(napakalakiModel.getCurrentPlayer());
            playerView.setNapakalaki(napakalakiModel);
        }
        else{
            JOptionPane.showOptionDialog(
                this, "Imposible pasar el turno",
                "No es posible pasar el turno",
                JOptionPane.ERROR_MESSAGE,
                JOptionPane.ERROR_MESSAGE, 
                null,
                new Object[]{" Aceptar "},"aceptar");
        }
    }//GEN-LAST:event_nextTurnActionPerformed

    private void combatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatActionPerformed
       CombatResult result = napakalakiModel.developCombat();
       String msg = "";
       
       switch(result){
           case WIN:
               msg = "¡Has ganado el combate!";
               break;
           case LOSE:
               msg = "¡Has perdido el combate!";
               break;
           case LOSEANDCONVERT:
               msg = "¡Has perdido el combate y te conviertes!";
               break;
           case WINGAME:
               msg = "¡HAS GANADO EL JUEGO! ¡ENHORABUENA!";
               break;
        }
       
        JOptionPane.showOptionDialog(
        this, msg,
        "Resultado del combate",
        ((result == CombatResult.WIN || result == CombatResult.WINGAME) ? JOptionPane.OK_OPTION : JOptionPane.ERROR_MESSAGE),
        ((result == CombatResult.WIN || result == CombatResult.WINGAME) ? JOptionPane.OK_OPTION : JOptionPane.ERROR_MESSAGE), 
        null,
        new Object[]{" Aceptar "},"aceptar");
        
        
        playerView.setPlayer(napakalakiModel.getCurrentPlayer());
        
        playerView.setDiscardTreasureB(true);
        playerView.setDiscardAllTreasuresB(true);
        playerView.setMakeVisibleB(true);
        playerView.setStealB(napakalakiModel.getCurrentPlayer().canISteal());
        
        combat.setEnabled(false);
        this.nextTurn.setEnabled(true);
        showMonster.setEnabled(false);
        monsterView.setVisible(false);
        
        playerView.setNapakalaki(napakalakiModel);
    }//GEN-LAST:event_combatActionPerformed
    
    /**
     * @param args the command line arguments
     */
  
  
    public void showView(){
        this.setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combat;
    private GUI.MonsterView monsterView;
    private javax.swing.JButton nextTurn;
    private GUI.PlayerView playerView;
    private javax.swing.JButton showMonster;
    // End of variables declaration//GEN-END:variables
}
