package GUI;


import NapakalakiGame.CultistPlayer;
import NapakalakiGame.Napakalaki;
import NapakalakiGame.Player;
import NapakalakiGame.Treasure;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author emilio
 */
public class PlayerView extends javax.swing.JPanel {

    
    private Player playerModel;
    private Napakalaki napakalakiModel;
    
    
    public void setNapakalaki(Napakalaki game){
        napakalakiModel = game;
    }
    
    public void setPlayer(Player p){
        playerModel = p;
        
        this.name.setText("Nombre: " + playerModel.getName());
        this.level.setText("Nivel: " + Integer.toString(playerModel.getLevels()));
        this.combatLevel.setText("Nivel de combate: " + Integer.toString(playerModel.getCombatLevel()));
        
        if(playerModel.isDead()){
            death.setVisible(true);
            this.death.setText("¡Estas Muerto!");
            
        }else
            death.setVisible(false);
        
        this.enemy.setText("Enemigo: " + playerModel.getEnemy().toString());
        
        if (playerModel instanceof CultistPlayer){
            this.cultist.setText("Eres un jugador sectario.");
        }else
            this.cultist.setText("Eres un jugador normal.");
        
        if(playerModel.getPendingBadConsequence().isEmpty())
            this.badConsequence.setText("Mal rollo: " + playerModel.getPendingBadConsequence().toString());
        else
            this.badConsequence.setText("Mal rollo: No hay mal rollo pendiente.");
        
        this.fillTreasurePanel(hiddenTreasures, playerModel.getHiddenTreasures());
        this.fillTreasurePanel(visibleTreasures, playerModel.getVisibleTreasures());
        
        this.stealTreasure.setEnabled(false);
         
        repaint();
        revalidate();
    }
 
    
    private void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList){
        // Se elimina la información antigua
        aPanel.removeAll();
        // Se recorre la lista de tesoros construyendo y añadiendo sus vistas
        // al panel
        for (Treasure t : aList) {
            TreasureView aTreasureView = new TreasureView();
            aTreasureView.setTreasure (t);
            aTreasureView.setVisible (true);
            aPanel.add (aTreasureView);
        }
        // Se fuerza la actualización visual del panel
        aPanel.repaint();
        aPanel.revalidate();
    }


    private ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
        // Se recorren los tesoros que contiene el panel,
        // almacenando en un vector aquellos que están seleccionados.
        // Finalmente se devuelve dicho vector.
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
            for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
            if ( tv.isSelected() )
            output.add ( tv.getTreasure() );
        }
    return output;
    }

    
    /**
     * Creates new form PlayerView
     */
    public PlayerView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JLabel();
        level = new javax.swing.JLabel();
        combatLevel = new javax.swing.JLabel();
        enemy = new javax.swing.JLabel();
        cultist = new javax.swing.JLabel();
        badConsequence = new javax.swing.JLabel();
        death = new javax.swing.JLabel();
        visibleTreasures = new javax.swing.JPanel();
        hiddenTreasures = new javax.swing.JPanel();
        discardTreasures = new javax.swing.JButton();
        discardAllTreasures = new javax.swing.JButton();
        makeVisible = new javax.swing.JButton();
        stealTreasure = new javax.swing.JButton();

        name.setText("Nombre");

        level.setText("Level");

        combatLevel.setText("combatLevel");

        enemy.setText("enemy");

        cultist.setText("cultist");

        badConsequence.setText("Mal rollo: ");

        death.setText("muerte");

        visibleTreasures.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 153), 2));

        hiddenTreasures.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 102), 2));

        discardTreasures.setText("Descartar Tesoro");
        discardTreasures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardTreasuresActionPerformed(evt);
            }
        });

        discardAllTreasures.setText("Descartar todos los tesoros");
        discardAllTreasures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardAllTreasuresActionPerformed(evt);
            }
        });

        makeVisible.setText("Hacer Visible");
        makeVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeVisibleActionPerformed(evt);
            }
        });

        stealTreasure.setText("Robar Tesoro");
        stealTreasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stealTreasureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hiddenTreasures, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(visibleTreasures, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name)
                    .addComponent(level)
                    .addComponent(combatLevel))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enemy)
                    .addComponent(death)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cultist)
                        .addGap(84, 84, 84)
                        .addComponent(badConsequence)))
                .addContainerGap(362, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(makeVisible, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(stealTreasure)
                    .addGap(71, 71, 71)
                    .addComponent(discardTreasures)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(discardAllTreasures)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name)
                    .addComponent(cultist)
                    .addComponent(badConsequence))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(level)
                    .addComponent(death))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combatLevel)
                    .addComponent(enemy))
                .addGap(82, 82, 82)
                .addComponent(visibleTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hiddenTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(103, 103, 103)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(makeVisible)
                        .addComponent(stealTreasure)
                        .addComponent(discardTreasures)
                        .addComponent(discardAllTreasures))
                    .addContainerGap(103, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void makeVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeVisibleActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenTreasures);
        napakalakiModel.makeTreasuresVisible (selHidden);
        setPlayer (napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_makeVisibleActionPerformed

    private void stealTreasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stealTreasureActionPerformed
      
       napakalakiModel.getCurrentPlayer().stealTreasure();
       setPlayer (napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_stealTreasureActionPerformed

    private void discardTreasuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardTreasuresActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenTreasures);
        ArrayList<Treasure> selVisible = getSelectedTreasures (visibleTreasures);
        
        napakalakiModel.discardHiddenTreasures(selHidden);
        napakalakiModel.discardVisibleTreasures(selVisible);
        
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_discardTreasuresActionPerformed

    private void discardAllTreasuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardAllTreasuresActionPerformed
       playerModel.discardAllTreasures();
       setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_discardAllTreasuresActionPerformed

    public void setDiscardTreasureB(boolean visible){
        discardTreasures.setEnabled(visible);
    }
    
    public void setDiscardAllTreasuresB(boolean visible){
        discardAllTreasures.setEnabled(visible);
    }
    
    public void setMakeVisibleB(boolean visible){
       makeVisible.setEnabled(visible);
    }
    
    public void setStealB(boolean visible){
        stealTreasure.setEnabled(visible);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel badConsequence;
    private javax.swing.JLabel combatLevel;
    private javax.swing.JLabel cultist;
    private javax.swing.JLabel death;
    private javax.swing.JButton discardAllTreasures;
    private javax.swing.JButton discardTreasures;
    private javax.swing.JLabel enemy;
    private javax.swing.JPanel hiddenTreasures;
    private javax.swing.JLabel level;
    private javax.swing.JButton makeVisible;
    private javax.swing.JLabel name;
    private javax.swing.JButton stealTreasure;
    private javax.swing.JPanel visibleTreasures;
    // End of variables declaration//GEN-END:variables
}
